EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Proyecto.com_ -- emu8086 assembler version: 4.08  
 
[ 10/02/2018  --  11:11:49 a.m. ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       org 100h ; inicio de programa
[   3]        :                                       include 'emu8086.inc' ;Incluye funciones de libreria emu8086
[   4]    0100: E9 C3 00 52 50 56 B9 00 00 2E C6 06   DEFINE_SCAN_NUM
                C3 01 00 B4 00 CD 16 B4 0E CD 10 3C 
                2D 74 69 3C 0D 75 03 E9 93 00 3C 08 
                75 1E BA 00 00 8B C1 2E F7 36 C4 01 
                8B C8 50 B0 20 B4 0E CD 10 58 50 B0 
                08 B4 0E CD 10 58 EB CB 3C 30 73 02 
                EB 04 3C 39 76 1A 50 B0 08 B4 0E CD 
                10 58 50 B0 20 B4 0E CD 10 58 50 B0 
                08 B4 0E CD 10 58 EB A7 50 8B C1 2E 
                F7 26 C4 01 8B C8 58 83 FA 00 75 19 
                2C 30 B4 00 8B D1 03 C8 72 0A EB 8B 
                2E C6 06 C3 01 01 EB 83 8B CA BA 00 
                00 8B C1 2E F7 36 C4 01 8B C8 50 B0 
                08 B4 0E CD 10 58 50 B0 20 B4 0E CD 
                10 58 50 B0 08 B4 0E CD 10 58 E9 5A 
                FF 2E 80 3E C3 01 00 74 02 F7 D9 5E 
                58 5A C3 00 0A 00                   
[   5]    01C6: EB 12 50 56 8A 04 3C 00 74 07 46 B4   DEFINE_PRINT_STRING
                0E CD 10 EB F3 5E 58 C3             
[   6]    01DA: EB 26 52 50 3D 00 00 75 0A 50 B0 30   DEFINE_PRINT_NUM
                B4 0E CD 10 58 EB 12 3D 00 00 79 0A 
                F7 D8 50 B0 2D B4 0E CD 10 58 E8 05 
                00 58 5A C3                         
[   7]    0202: EB 50 50 53 51 52 B9 01 00 BB 10 27   DEFINE_PRINT_NUM_UNS
                3D 00 00 74 32 83 FB 00 74 35 83 F9 
                00 74 04 3B C3 72 14 B9 00 00 BA 00 
                00 F7 F3 04 30 50 8A C0 B4 0E CD 10 
                58 8B C2 50 BA 00 00 8B C3 2E F7 36 
                52 02 8B D8 58 EB CE 50 B0 30 B4 0E 
                CD 10 58 5A 59 5B 58 C3 0A 00       
[   8]        :                                       
[   9]    0254: BE 00 00                              mov si, 0
[  10]    0257: B0 00                                 mov al, 0
[  11]        :                                       
[  12]        :                                       ;Convertir primera cadena a numero
[  13]    0259:                                       cadAnum:
[  14]    0259: 80 BC 41 03 24                        cmp cad1[si], "$" ; Compara el signo de la cadena
[  15]    025E: 74 10                                 jz seguir        ; Hace un salto a seguir
[  16]    0260: B3 0A                                 mov bl, 10
[  17]    0262: F6 E3                                 mul bl
[  18]    0264: 80 AC 41 03 30                        sub cad1[si], '0'
[  19]    0269: 02 84 41 03                           add al, cad1[si]
[  20]        :                                       
[  21]    026D: 46                                    inc si           ;Incrementa Si
[  22]    026E: E2 E9                                 loop cadAnum      ; Vuelve y llama la funcion
[  23]        :                                       
[  24]    0270:                                       seguir:
[  25]    0270: A2 46 03                              mov aux1, al
[  26]        :                                       ;Convertir segunda cadena a numero
[  27]    0273: BE 00 00                              mov si, 0
[  28]    0276: B0 00                                 mov al, 0
[  29]    0278:                                       cadAnum2:
[  30]    0278: 80 BC 44 03 24                        cmp cad3[si], "$"
[  31]    027D: 74 10                                 jz seguir2
[  32]        :                                       
[  33]    027F: B3 0A                                 mov bl, 10
[  34]    0281: F6 E3                                 mul bl
[  35]    0283: 80 AC 44 03 30                        sub cad3[si], '0'
[  36]    0288: 02 84 44 03                           add al, cad3[si]
[  37]        :                                       
[  38]    028C: 46                                    inc si
[  39]    028D: E2 E9                                 loop cadAnum2
[  40]        :                                       
[  41]    028F:                                       seguir2:
[  42]    028F: 8A D8                                 mov bl, al
[  43]    0291: A0 46 03                              mov al, aux1
[  44]        :                                       
[  45]        :                                       ;realizar operaciones normalmente teniendo ya los dos numeros decimales
[  46]    0294: 80 3E 43 03 2D                        cmp cad2, "-"
[  47]    0299: 74 15                                 jz resta
[  48]    029B: 80 3E 43 03 2B                        cmp cad2, "+"
[  49]    02A0: 74 12                                 jz suma
[  50]    02A2: 80 3E 43 03 2A                        cmp cad2, "*"
[  51]    02A7: 74 0F                                 jz multi
[  52]    02A9: 80 3E 43 03 2F                        cmp cad2, "/"
[  53]    02AE: 74 0C                                 jz divi
[  54]        :                                       
[  55]        :                                       
[  56]    02B0:                                       resta:
[  57]    02B0: 2A C3                                 sub al, bl
[  58]    02B2: EB 0C                                 jmp fin
[  59]    02B4:                                       suma:
[  60]    02B4: 02 C3                                 add al, bl
[  61]    02B6: EB 08                                 jmp fin
[  62]    02B8:                                       multi:
[  63]    02B8: F6 E3                                 mul bl
[  64]    02BA: EB 04                                 jmp fin
[  65]    02BC:                                       divi:
[  66]    02BC: F6 F3                                 div bl
[  67]    02BE: EB 00                                 jmp fin
[  68]        :                                       
[  69]        :                                       
[  70]    02C0:                                       fin:
[  71]        :                                       
[  72]    02C0: 8B D8                                 mov bx, ax
[  73]    02C2: B4 09                                 mov ah,09
[  74]    02C4: BA 4A 03                              lea dx,msg
[  75]    02C7: CD 21                                 int 21h
[  76]    02C9: 8B C3                                 mov ax, bx
[  77]    02CB: E8 0E FF                              call PRINT_NUM
[  78]    02CE: A2 57 03                              mov num,al
[  79]    02D1: 80 3E 47 03 62                        cmp cad4,"b"
[  80]    02D6: 74 0F                                 jz bina
[  81]    02D8: 80 3E 47 03 6F                        cmp cad4,"o"
[  82]    02DD: 74 0F                                 jz oct
[  83]        :                                       
[  84]    02DF: 80 3E 47 03 68                        cmp cad4,"h"
[  85]    02E4: E8 72 00                              call hexa
[  86]        :                                       
[  87]    02E7:                                       bina:
[  88]    02E7: C6 06 4B 03 02                        mov bandera,2  ; Divisor si es binario
[  89]    02EC: EB 07                                 jmp final
[  90]        :                                       
[  91]    02EE:                                       oct:
[  92]    02EE: C6 06 4B 03 08                        mov bandera,8  ; Divisor si es octal
[  93]    02F3: EB 00                                 jmp final
[  94]        :                                       
[  95]    02F5:                                       final:
[  96]    02F5: B4 02                                 mov ah,02h   ;Imprimimos signo de igual
[  97]    02F7: B2 3D                                 mov dl,"="
[  98]    02F9: CD 21                                 int 21h
[  99]    02FB: BE 07 00                              mov SI,7     ;Comienzan los ciclos de división
[ 100]    02FE:                                       bin:         ;Uso de etiqueta
[ 101]        :                                       
[ 102]    02FE: B4 00                                 mov Ah,00h ;Aseguramos residuo de 0
[ 103]    0300: A0 57 03                              mov Al,num
[ 104]    0303: 8A 1E 4B 03                           mov Bl,bandera
[ 105]    0307: F6 F3                                 div Bl
[ 106]    0309: 88 26 56 03                           mov var1,Ah
[ 107]    030D: A2 57 03                              mov num,Al
[ 108]        :                                       
[ 109]    0310: 8A 16 56 03                           mov dl,var1
[ 110]    0314: 80 C2 30                              add dl,30h
[ 111]        :                                       
[ 112]    0317: 88 94 4C 03                           mov cad[SI],dl ;Concatenamos resultados
[ 113]        :                                       
[ 114]    031B: 80 3E 57 03 01                        cmp num,1 ;Hacemos comparación
[ 115]    0320: 4E                                    dec SI
[ 116]    0321: 75 DB                                 jne bin   ;Indicamos volver a etiqueta bin o:
[ 117]    0323: 74 09                                 je salida   ;Ir a etiqueta salir
[ 118]        :                                       
[ 119]        :                                       
[ 120]        :                                       
[ 121]    0325: 80 3E 57 03 00                        cmp num,0 ;Comparación con 0
[ 122]    032A: 75 D2                                 jne bin
[ 123]    032C: 74 00                                 je salida
[ 124]        :                                       
[ 125]        :                                       
[ 126]    032E:                                       salida:          ;Etiqueta de salida
[ 127]        :                                       
[ 128]    032E: 8A 16 57 03                           mov dl,num ;Proceso para imprimir cadena final con número binario
[ 129]    0332: 80 C2 30                              add dl,30h
[ 130]        :                                       
[ 131]    0335: 88 94 4C 03                           mov cad[SI],dl
[ 132]        :                                       
[ 133]    0339: B4 09                                 mov ah,09h
[ 134]    033B: BA 4C 03                              lea Dx,cad
[ 135]    033E: CD 21                                 int 21h
[ 136]        :                                       
[ 137]        :                                       
[ 138]        :                                       
[ 139]    0340: C3                                    ret                 ;Finaliza el programa principal
[ 140]        :                                       
[ 141]    0341: 36 24                                 cad1 db "6$"
[ 142]    0343: 2F                                    cad2 db "/"
[ 143]    0344: 32 24                                 cad3 db "2$"
[ 144]    0346: 00                                    aux1 db ?
[ 145]    0347: 68                                    cad4 db "h"
[ 146]    0348: 00 00                                 aux2 dw ?
[ 147]        :                                       
[ 148]    034A: 24                                    msg db "$"
[ 149]    034B: 00                                    bandera db ?
[ 150]        :                                       
[ 151]        :                                       
[ 152]    034C: 20 20 20 20 20 20 20 20 20 24         cad  db 9 dup (' '),'$'
[ 153]    0356: 00                                    var1 db ?
[ 154]    0357: 00                                    num  db ?
[ 155]    0358: 00                                    aux  db ?
[ 156]        :                                       
[ 157]        :                                       
[ 158]    0359:                                       hexa proc
[ 159]    0359: B4 02                                 mov ah,02h   ;Imprimimos signo de igual
[ 160]    035B: B2 3D                                 mov dl,"="
[ 161]    035D: CD 21                                 int 21h
[ 162]    035F: BE 07 00                              mov SI,7     ;Comienzan los ciclos de división
[ 163]    0362:                                       bin2:         ;Uso de etiqueta
[ 164]        :                                       
[ 165]    0362: B4 00                                 mov Ah,00h ;Aseguramos residuo de 0
[ 166]    0364: A0 57 03                              mov Al,num
[ 167]    0367: B3 02                                 mov Bl,2
[ 168]    0369: F6 F3                                 div Bl
[ 169]    036B: 88 26 56 03                           mov var1,Ah
[ 170]    036F: A2 57 03                              mov num,Al
[ 171]        :                                       
[ 172]    0372: 8A 16 56 03                           mov dl,var1
[ 173]    0376: 80 C2 30                              add dl,30h
[ 174]        :                                       
[ 175]    0379: 88 94 4C 03                           mov cad[SI],dl;Concatenamos resultados
[ 176]        :                                       
[ 177]    037D: 80 3E 57 03 01                        cmp num,1 ;Hacemos comparación
[ 178]    0382: 4E                                    dec SI
[ 179]    0383: 75 DD                                 jne bin2   ;Indicamos volver a etiqueta bin o:
[ 180]    0385: 74 09                                 je salida2   ;Ir a etiqueta salir
[ 181]        :                                       
[ 182]        :                                       
[ 183]        :                                       
[ 184]    0387: 80 3E 57 03 00                        cmp num,0 ;Comparación con 0
[ 185]    038C: 75 D4                                 jne bin2
[ 186]    038E: 74 00                                 je salida2
[ 187]        :                                       
[ 188]        :                                       
[ 189]    0390:                                       salida2:          ;Etiqueta de salida
[ 190]        :                                       
[ 191]    0390: 8A 16 57 03                           mov dl,num ;Proceso para imprimir cadena final con número binario
[ 192]    0394: 80 C2 30                              add dl,30h
[ 193]        :                                       
[ 194]    0397: 88 94 4C 03                           mov cad[SI],dl
[ 195]        :                                       
[ 196]        :                                       .model smal
[ 197]    039B: EB 03                                 .data
[ 198]        :                                       
[ 199]        :                                       
[ 200]        :                                       
[ 201]        :                                       
[ 202]    039D: 00                                    digito1 db 00h
[ 203]    039E: 00                                    digito2 db 00h
[ 204]    039F: 00                                    digito3 db 00h
[ 205]        :                                       .stack
[ 206]    03A0:                                       .code
[ 207]    03A0:                                       dar:
[ 208]    03A0: 8C C8                                 mov ax,@data
[ 209]    03A2: 8E D8                                 mov ds,ax
[ 210]    03A4: C6 06 9D 03 00                        mov digito1,00h
[ 211]    03A9: C6 06 9E 03 00                        mov digito2,00h
[ 212]    03AE: C6 06 9F 03 00                        mov digito3,00h
[ 213]        :                                       
[ 214]        :                                       
[ 215]        :                                       
[ 216]    03B3: BE 00 00                              mov si,0
[ 217]    03B6:                                       leer:
[ 218]    03B6: 80 AC 4C 03 30                        sub cad[si],30h
[ 219]        :                                       
[ 220]    03BB: 74 00                                 je continua
[ 221]        :                                       
[ 222]        :                                       
[ 223]        :                                       
[ 224]    03BD:                                       continua:
[ 225]    03BD: 46                                    inc si
[ 226]    03BE: 83 FE 07                              cmp si,7d;mientras los digitos introducidos sean menores o iguales a 7 seguira leyendo
[ 227]    03C1: 76 F3                                 jbe leer;Si ya leyo el digito 8 calcula
[ 228]        :                                       
[ 229]        :                                       
[ 230]    03C3: 83 EE 01                              sub si,1;Decrementa 1 (el dato que incrementamos en la condicion anterior)
[ 231]    03C6:                                       calcula:
[ 232]        :                                       ;inicia el calculo de los primeros 4 bits
[ 233]    03C6: B8 01 00                              mov ax,01h
[ 234]    03C9: 50                                    push ax
[ 235]    03CA: B9 04 00                              mov cx,4
[ 236]    03CD:                                       pot1:
[ 237]    03CD: F6 A4 4C 03                           mul cad[si]
[ 238]    03D1: 00 06 9D 03                           add digito1,al
[ 239]    03D5: 4E                                    dec si
[ 240]    03D6: 58                                    pop ax
[ 241]    03D7: BB 02 00                              mov bx,0002h
[ 242]    03DA: F7 E3                                 mul bx
[ 243]    03DC: 50                                    push ax
[ 244]    03DD: E2 EE                                 loop pot1
[ 245]        :                                       ;finaliza calculo de los primeros 4bits
[ 246]        :                                       ;inicia el calculo de los segundos 4 bits
[ 247]    03DF: B8 01 00                              mov ax,01h
[ 248]    03E2: 50                                    push ax
[ 249]    03E3: B9 04 00                              mov cx,4
[ 250]    03E6:                                       pot2:
[ 251]    03E6: F6 A4 4C 03                           mul cad[si]
[ 252]    03EA: 00 06 9E 03                           add digito2,al
[ 253]    03EE: 4E                                    dec si
[ 254]    03EF: 58                                    pop ax
[ 255]    03F0: BB 02 00                              mov bx,0002h
[ 256]    03F3: F7 E3                                 mul bx
[ 257]    03F5: 50                                    push ax
[ 258]    03F6: E2 EE                                 loop pot2
[ 259]        :                                       ;finaliza calculo de los segundos 4bits
[ 260]    03F8: 8A 16 9F 03                           mov dl,digito3;convertimos el digito 3 a ascci
[ 261]    03FC: E8 4D 00                              call numero
[ 262]    03FF: 88 16 9F 03                           mov digito3,dl
[ 263]        :                                       ;convertimos el segundo digito a ascci
[ 264]    0403: 8A 16 9E 03                           mov dl,digito2
[ 265]    0407: 80 FA 0A                              cmp dl,0Ah
[ 266]    040A: 73 05                                 jae c1;si es mayor a 10 lo convertimos a letra sino a numero
[ 267]    040C: E8 3D 00                              call numero
[ 268]    040F: EB 03                                 jmp f1
[ 269]    0411:                                       c1:
[ 270]    0411: E8 3C 00                              call letra
[ 271]    0414:                                       f1:
[ 272]    0414: 88 16 9E 03                           mov digito2,dl
[ 273]        :                                       ;fin de la conversion
[ 274]        :                                       ;convertimos el ultimo digito a ascci
[ 275]    0418: 8A 16 9D 03                           mov dl,digito1
[ 276]    041C: 80 FA 0A                              cmp dl,0Ah
[ 277]    041F: 73 05                                 jae c2;si es mayor a 10 lo convertimos a letra sino a numero
[ 278]    0421: E8 28 00                              call numero
[ 279]    0424: EB 03                                 jmp f2
[ 280]    0426:                                       c2:
[ 281]    0426: E8 27 00                              call letra
[ 282]    0429:                                       f2:
[ 283]    0429: 88 16 9D 03                           mov digito1,dl
[ 284]        :                                       ;fin de la conversion
[ 285]        :                                       
[ 286]        :                                       
[ 287]        :                                       
[ 288]        :                                       
[ 289]        :                                       
[ 290]    042D: 8A 16 9F 03                           mov dl,digito3;Imprimimos el digito mas significativo
[ 291]    0431: E8 13 00                              call imprime_caracter
[ 292]    0434: 8A 16 9E 03                           mov dl,digito2; Imprimimos el segundo digito
[ 293]    0438: E8 0C 00                              call imprime_caracter
[ 294]    043B: 8A 16 9D 03                           mov dl,digito1;imprime el ultimo digito
[ 295]    043F: E8 05 00                              call imprime_caracter
[ 296]    0442: B8 00 4C                              mov ax,4c00h
[ 297]    0445: CD 21                                 int 21h
[ 298]        :                                       
[ 299]        :                                       
[ 300]        :                                       
[ 301]        :                                       
[ 302]        :                                       
[ 303]    0447:                                       imprime_caracter proc
[ 304]    0447: B4 02                                 mov ah,02h
[ 305]    0449: CD 21                                 int 21h
[ 306]    044B: C3                                    ret
[ 307]        :                                       endp
[ 308]        :                                       
[ 309]    044C:                                       numero proc ;procedimiento que convierte los numeros a Ascci
[ 310]    044C: 80 C2 30                              add dl,30h
[ 311]    044F: C3                                    ret
[ 312]        :                                       endp
[ 313]        :                                       
[ 314]    0450:                                       letra proc ;Prodcedimiento que convierte las letras a ascci
[ 315]    0450: 80 C2 37                              add dl,55d
[ 316]    0453: C3                                    ret
[ 317]        :                                       endp
[ 318]        :                                       
 
===================================================================================================
 




===================================================================================================
